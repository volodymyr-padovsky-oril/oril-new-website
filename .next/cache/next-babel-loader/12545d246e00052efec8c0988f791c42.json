{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport { parse } from \"query-string\";\nimport { later } from \"../utils/main\";\nimport { scrollTo } from \"../utils/scroll\";\nimport \"react-tabs/style/react-tabs.css\";\nimport \"./index.scss\";\n\nvar CustomTab = function CustomTab(_ref) {\n  var children = _ref.children,\n      activeClassName = _ref.activeClassName;\n  return __jsx(Tab, {\n    className: \"react-tabs__tab \".concat(activeClassName)\n  }, __jsx(\"div\", null, __jsx(\"div\", null, children)));\n};\n\nCustomTab.tabsRole = 'Tab';\nexport var BaseTabs =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BaseTabs, _Component);\n\n  function BaseTabs(props) {\n    var _this;\n\n    _classCallCheck(this, BaseTabs);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BaseTabs).call(this, props));\n    _this.startIndex = props.startIndex || 0;\n    _this.state = {\n      activeTab: 0,\n      show: true\n    };\n    _this.handleSelect = _this.handleSelect.bind(_assertThisInitialized(_this));\n    _this.handleScroll = _this.handleScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(BaseTabs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      window.addEventListener('scroll', this.handleScroll);\n      this.setState({\n        activeTab: this.startIndex\n      });\n      this.tabsContainer = document.querySelector('.react-tabs');\n      this.tabList = document.querySelector('.react-tabs__tab-list');\n      this.tabs = document.querySelectorAll('.react-tabs__tab');\n      this.div = document.createElement('div');\n      this.div.classList.add('sub-template');\n      var query = parse(window.location.search);\n      var tabIndex = this.props.tabs.findIndex(function (tab) {\n        return tab.id === query.activeTab;\n      });\n\n      if (tabIndex !== -1) {\n        this.handleSelect(tabIndex);\n      }\n\n      later().then(function () {\n        return _this2.setActiveTabBorders();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('scroll', this.handleScroll);\n    }\n  }, {\n    key: \"handleScroll\",\n    value: function handleScroll() {\n      var offsetTop = window.innerWidth < 768 ? 0 : 20;\n\n      if (this.tabsContainer) {\n        var template = document.querySelector('.sub-template');\n        var condition = Math.floor(this.tabsContainer.getBoundingClientRect().top > offsetTop);\n\n        if (condition) {\n          if (template) {\n            this.tabList.parentNode.removeChild(template);\n          }\n        } else {\n          if (!(typeof template != 'undefined' && template != null)) {\n            this.tabList.parentNode.insertBefore(this.div, this.tabList.nextSibling);\n          }\n        }\n\n        this.setState({\n          show: condition\n        });\n      }\n    }\n  }, {\n    key: \"setActiveTabBorders\",\n    value: function setActiveTabBorders() {\n      var selectedTab = document.querySelector('.react-tabs__tab--selected');\n      var tabsCount = this.tabs.length;\n      var activeClass = 'react-tabs__tab--active';\n      var selectedTabIndex = 0;\n\n      for (var i = 0; i < this.tabs.length; i++) {\n        this.tabs[i].classList.remove(activeClass);\n\n        if (this.tabs[i] === selectedTab) {\n          selectedTabIndex = i;\n        }\n      }\n\n      switch (selectedTabIndex) {\n        case 0:\n          this.tabs[0].classList.add(activeClass);\n          break;\n\n        case tabsCount:\n          this.tabs[tabsCount].classList.add(activeClass);\n          break;\n\n        default:\n          selectedTab.classList.add(activeClass);\n          selectedTab.previousElementSibling.classList.add(activeClass);\n          break;\n      }\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(index) {\n      var _this3 = this;\n\n      this.setState({\n        activeTab: index\n      });\n      this.props.history.push({\n        pathname: \"/\".concat(this.props.pathname),\n        search: \"?activeTab=\".concat(this.props.tabs[index].id)\n      });\n      later().then(function () {\n        return _this3.setActiveTabBorders();\n      });\n      var selector = '#development';\n\n      switch (this.props.pathname) {\n        case 'services':\n          selector = '#development';\n          break;\n\n        case 'portfolio':\n          selector = '#products';\n          break;\n\n        default:\n          break;\n      }\n\n      if (document.querySelector(selector)) {\n        scrollTo(selector);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(Tabs, {\n        onSelect: this.handleSelect,\n        selectedIndex: this.state.activeTab\n      }, __jsx(TabList, {\n        className: \"react-tabs__tab-list \".concat(this.state.show ? '' : 'sticky')\n      }, this.props.tabs.map(function (tab, index) {\n        return __jsx(CustomTab, {\n          activeClassName: _this4.state.activeTab === index ? 'react-tabs__tab--selected' : '',\n          key: index\n        }, tab.title);\n      })), this.props.tabs.map(function (tab, index) {\n        return __jsx(TabPanel, {\n          key: index\n        }, tab.component());\n      }));\n    }\n  }]);\n\n  return BaseTabs;\n}(Component);\nexport default withRouter(BaseTabs);","map":{"version":3,"sources":["/Users/volodymyr/Documents/oril-new-website/src/commons/BaseTabs/index.js"],"names":["React","Component","withRouter","Tab","Tabs","TabList","TabPanel","parse","later","scrollTo","CustomTab","children","activeClassName","tabsRole","BaseTabs","props","startIndex","state","activeTab","show","handleSelect","bind","handleScroll","window","addEventListener","setState","tabsContainer","document","querySelector","tabList","tabs","querySelectorAll","div","createElement","classList","add","query","location","search","tabIndex","findIndex","tab","id","then","setActiveTabBorders","removeEventListener","offsetTop","innerWidth","template","condition","Math","floor","getBoundingClientRect","top","parentNode","removeChild","insertBefore","nextSibling","selectedTab","tabsCount","length","activeClass","selectedTabIndex","i","remove","previousElementSibling","index","history","push","pathname","selector","map","title","component"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {Tab, Tabs, TabList, TabPanel} from \"react-tabs\";\nimport {parse} from \"query-string\";\nimport {later} from \"../utils/main\";\nimport {scrollTo} from \"../utils/scroll\";\n\nimport \"react-tabs/style/react-tabs.css\";\nimport \"./index.scss\";\n\nconst CustomTab = ({ children, activeClassName }) => (\n    <Tab className={`react-tabs__tab ${activeClassName}`}>\n        <div>\n            <div>\n                {children}\n            </div>\n        </div>\n    </Tab>\n);\n\nCustomTab.tabsRole = 'Tab';\n\nexport class BaseTabs extends Component {\n    constructor(props) {\n        super(props);\n        this.startIndex = props.startIndex || 0;\n        this.state = { activeTab: 0, show: true };\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleScroll = this.handleScroll.bind(this);\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.handleScroll);\n        this.setState({activeTab: this.startIndex});\n        this.tabsContainer = document.querySelector('.react-tabs');\n        this.tabList = document.querySelector('.react-tabs__tab-list');\n        this.tabs = document.querySelectorAll('.react-tabs__tab');\n        this.div = document.createElement('div');\n        this.div.classList.add('sub-template');\n        const query = parse(window.location.search);\n        const tabIndex = this.props.tabs.findIndex(tab => tab.id === query.activeTab);\n\n        if (tabIndex !== -1) {\n            this.handleSelect(tabIndex);\n        }\n\n        later().then(() => this.setActiveTabBorders());\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll);\n    }\n\n    handleScroll() {\n        const offsetTop = window.innerWidth < 768 ? 0 : 20;\n\n        if (this.tabsContainer) {\n            const template = document.querySelector('.sub-template');\n            const condition = Math.floor(this.tabsContainer.getBoundingClientRect().top > offsetTop);\n\n            if (condition) {\n                if (template) {\n                    this.tabList.parentNode.removeChild(template);\n                }\n            } else {\n                if (!(typeof(template) != 'undefined' && template != null)) {\n                    this.tabList.parentNode.insertBefore(this.div, this.tabList.nextSibling);\n                }\n            }\n\n            this.setState({\n                show: condition\n            });\n        }\n    }\n\n    setActiveTabBorders() {\n        const selectedTab = document.querySelector('.react-tabs__tab--selected');\n        const tabsCount = this.tabs.length;\n        const activeClass = 'react-tabs__tab--active';\n        let selectedTabIndex = 0;\n\n        for (let i = 0; i < this.tabs.length; i++) {\n            this.tabs[i].classList.remove(activeClass);\n            if (this.tabs[i] === selectedTab) {\n                selectedTabIndex = i;\n            }\n        }\n\n        switch (selectedTabIndex) {\n            case 0:\n                this.tabs[0].classList.add(activeClass);\n                break;\n            case tabsCount:\n                this.tabs[tabsCount].classList.add(activeClass);\n                break;\n            default:\n                selectedTab.classList.add(activeClass);\n                selectedTab.previousElementSibling.classList.add(activeClass);\n                break;\n        }\n    }\n\n    handleSelect(index) {\n        this.setState({ activeTab: index });\n        this.props.history.push({\n            pathname: `/${this.props.pathname}`,\n            search: `?activeTab=${this.props.tabs[index].id}`\n        });\n\n        later().then(() => this.setActiveTabBorders());\n        let selector = '#development';\n\n        switch (this.props.pathname) {\n            case 'services':\n                selector = '#development';\n                break;\n            case 'portfolio':\n                selector = '#products';\n                break;\n            default:\n                break;\n        }\n\n        if (document.querySelector(selector)) {\n            scrollTo(selector);\n        }\n    }\n\n    render() {\n        return (\n            <Tabs onSelect={this.handleSelect} selectedIndex={this.state.activeTab}>\n                <TabList className={`react-tabs__tab-list ${this.state.show ? '' : 'sticky'}`}>\n                    {\n                        this.props.tabs.map((tab, index) => (\n                            <CustomTab activeClassName={this.state.activeTab === index ? 'react-tabs__tab--selected' : ''} key={index}>\n                                {tab.title}\n                            </CustomTab>)\n                        )\n                    }\n                </TabList>\n                {\n                    this.props.tabs.map((tab, index) => (<TabPanel key={index}>{tab.component()}</TabPanel>))\n                }\n            </Tabs>\n        );\n    }\n}\n\nexport default withRouter(BaseTabs);\n"]},"metadata":{},"sourceType":"module"}