{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport \"./index.scss\";\nimport { closeSnackbar } from '../../actions/helper';\n\nclass Snackbar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      open: false,\n      text: '',\n      vertical: 'top',\n      horizontal: 'right',\n      isActive: true\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.isSnackbarOpen !== nextProps.isSnackbarOpen) {\n      this.setState({\n        open: nextProps.isSnackbarOpen,\n        text: nextProps.snackbarText\n      });\n    }\n  }\n\n  render() {\n    const {\n      open,\n      text\n    } = this.state;\n    console.log('this.props.isSnackbarOpen', this.props.isSnackbarOpen);\n    return __jsx(\"div\", {\n      className: open ? [\"snackbar\", \"show\"].join(\" \") : \"snackbar\"\n    }, text);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isSnackbarOpen: state.helper.isSnackbarOpen,\n  snackbarText: state.helper.text\n});\n\nconst mapDispatchToProps = dispatch => ({\n  closeSnackbarPanel: () => {\n    dispatch(closeSnackbar());\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Snackbar);","map":{"version":3,"sources":["/Users/volodymyr/Documents/oril-new-website/src/commons/SnackBar/index.js"],"names":["React","Component","connect","closeSnackbar","Snackbar","open","text","vertical","horizontal","isActive","componentWillReceiveProps","nextProps","props","isSnackbarOpen","setState","snackbarText","render","state","console","log","join","mapStateToProps","helper","mapDispatchToProps","dispatch","closeSnackbarPanel"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAO,cAAP;AAEA,SAAQC,aAAR,QAA4B,sBAA5B;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;;AAAA,mCACrB;AACJI,MAAAA,IAAI,EAAE,KADF;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,QAAQ,EAAE,KAHN;AAIJC,MAAAA,UAAU,EAAE,OAJR;AAKJC,MAAAA,QAAQ,EAAE;AALN,KADqB;AAAA;;AAS7BC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,QAAI,KAAKC,KAAL,CAAWC,cAAX,KAA8BF,SAAS,CAACE,cAA5C,EAA4D;AACxD,WAAKC,QAAL,CAAc;AACVT,QAAAA,IAAI,EAAEM,SAAS,CAACE,cADN;AAEVP,QAAAA,IAAI,EAAEK,SAAS,CAACI;AAFN,OAAd;AAIH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACX,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAe,KAAKW,KAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyC,KAAKP,KAAL,CAAWC,cAApD;AACA,WACI;AAAK,MAAA,SAAS,EAAER,IAAI,GAAG,CAAC,UAAD,EAAa,MAAb,EAAqBe,IAArB,CAA0B,GAA1B,CAAH,GAAoC;AAAxD,OACKd,IADL,CADJ;AAKH;;AA1B4B;;AA6BjC,MAAMe,eAAe,GAAIJ,KAAD,KAAY;AAChCJ,EAAAA,cAAc,EAAEI,KAAK,CAACK,MAAN,CAAaT,cADG;AAEhCE,EAAAA,YAAY,EAAEE,KAAK,CAACK,MAAN,CAAahB;AAFK,CAAZ,CAAxB;;AAKA,MAAMiB,kBAAkB,GAAIC,QAAD,KAAe;AACtCC,EAAAA,kBAAkB,EAAE,MAAM;AACtBD,IAAAA,QAAQ,CAACrB,aAAa,EAAd,CAAR;AACH;AAHqC,CAAf,CAA3B;;AAOA,eAAgBD,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,QAA7C,CAAhB","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport \"./index.scss\";\n\nimport {closeSnackbar} from '../../actions/helper';\n\nclass Snackbar extends Component {\n    state = {\n        open: false,\n        text: '',\n        vertical: 'top',\n        horizontal: 'right',\n        isActive: true\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.isSnackbarOpen !== nextProps.isSnackbarOpen) {\n            this.setState({\n                open: nextProps.isSnackbarOpen,\n                text: nextProps.snackbarText\n            });\n        }\n    }\n\n    render() {\n        const {open, text} = this.state;\n        console.log('this.props.isSnackbarOpen', this.props.isSnackbarOpen)\n        return (\n            <div className={open ? [\"snackbar\", \"show\"].join(\" \") : \"snackbar\"}>\n                {text}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isSnackbarOpen: state.helper.isSnackbarOpen,\n    snackbarText: state.helper.text\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    closeSnackbarPanel: () => {\n        dispatch(closeSnackbar())\n    }\n});\n\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(Snackbar));\n\n"]},"metadata":{},"sourceType":"module"}