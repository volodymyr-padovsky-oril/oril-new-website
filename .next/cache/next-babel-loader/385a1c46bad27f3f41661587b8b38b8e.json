{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport \"./index.scss\";\nimport { closeSnackbar } from '../../actions/helper';\n\nvar Snackbar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Snackbar, _Component);\n\n  function Snackbar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Snackbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Snackbar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      open: false,\n      text: '',\n      vertical: 'top',\n      horizontal: 'right',\n      isActive: true\n    });\n\n    return _this;\n  }\n\n  _createClass(Snackbar, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.isSnackbarOpen !== nextProps.isSnackbarOpen) {\n        this.setState({\n          open: nextProps.isSnackbarOpen,\n          text: nextProps.snackbarText\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          open = _this$state.open,\n          text = _this$state.text;\n      console.log('this.props.isSnackbarOpen', this.props.isSnackbarOpen);\n      return __jsx(\"div\", {\n        className: open ? [\"snackbar\", \"show\"].join(\" \") : \"snackbar\"\n      }, text);\n    }\n  }]);\n\n  return Snackbar;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSnackbarOpen: state.helper.isSnackbarOpen,\n    snackbarText: state.helper.text\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    closeSnackbarPanel: function closeSnackbarPanel() {\n      dispatch(closeSnackbar());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Snackbar);","map":{"version":3,"sources":["/Users/volodymyr/Documents/oril-new-website/src/commons/SnackBar/index.js"],"names":["React","Component","connect","closeSnackbar","Snackbar","open","text","vertical","horizontal","isActive","nextProps","props","isSnackbarOpen","setState","snackbarText","state","console","log","join","mapStateToProps","helper","mapDispatchToProps","dispatch","closeSnackbarPanel"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAO,cAAP;AAEA,SAAQC,aAAR,QAA4B,sBAA5B;;IAEMC,Q;;;;;;;;;;;;;;;;;;4DACM;AACJC,MAAAA,IAAI,EAAE,KADF;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,QAAQ,EAAE,KAHN;AAIJC,MAAAA,UAAU,EAAE,OAJR;AAKJC,MAAAA,QAAQ,EAAE;AALN,K;;;;;;;8CAQkBC,S,EAAW;AACjC,UAAI,KAAKC,KAAL,CAAWC,cAAX,KAA8BF,SAAS,CAACE,cAA5C,EAA4D;AACxD,aAAKC,QAAL,CAAc;AACVR,UAAAA,IAAI,EAAEK,SAAS,CAACE,cADN;AAEVN,UAAAA,IAAI,EAAEI,SAAS,CAACI;AAFN,SAAd;AAIH;AACJ;;;6BAEQ;AAAA,wBACgB,KAAKC,KADrB;AAAA,UACEV,IADF,eACEA,IADF;AAAA,UACQC,IADR,eACQA,IADR;AAELU,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyC,KAAKN,KAAL,CAAWC,cAApD;AACA,aACI;AAAK,QAAA,SAAS,EAAEP,IAAI,GAAG,CAAC,UAAD,EAAa,MAAb,EAAqBa,IAArB,CAA0B,GAA1B,CAAH,GAAoC;AAAxD,SACKZ,IADL,CADJ;AAKH;;;;EA1BkBL,S;;AA6BvB,IAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,KAAD;AAAA,SAAY;AAChCH,IAAAA,cAAc,EAAEG,KAAK,CAACK,MAAN,CAAaR,cADG;AAEhCE,IAAAA,YAAY,EAAEC,KAAK,CAACK,MAAN,CAAad;AAFK,GAAZ;AAAA,CAAxB;;AAKA,IAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACtCC,IAAAA,kBAAkB,EAAE,8BAAM;AACtBD,MAAAA,QAAQ,CAACnB,aAAa,EAAd,CAAR;AACH;AAHqC,GAAf;AAAA,CAA3B;;AAOA,eAAgBD,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,QAA7C,CAAhB","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport \"./index.scss\";\n\nimport {closeSnackbar} from '../../actions/helper';\n\nclass Snackbar extends Component {\n    state = {\n        open: false,\n        text: '',\n        vertical: 'top',\n        horizontal: 'right',\n        isActive: true\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.isSnackbarOpen !== nextProps.isSnackbarOpen) {\n            this.setState({\n                open: nextProps.isSnackbarOpen,\n                text: nextProps.snackbarText\n            });\n        }\n    }\n\n    render() {\n        const {open, text} = this.state;\n        console.log('this.props.isSnackbarOpen', this.props.isSnackbarOpen)\n        return (\n            <div className={open ? [\"snackbar\", \"show\"].join(\" \") : \"snackbar\"}>\n                {text}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isSnackbarOpen: state.helper.isSnackbarOpen,\n    snackbarText: state.helper.text\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    closeSnackbarPanel: () => {\n        dispatch(closeSnackbar())\n    }\n});\n\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(Snackbar));\n\n"]},"metadata":{},"sourceType":"module"}